from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.units import cm
from reportlab.lib import colors
from pathlib import Path
import pandas as pd

def draw_title(c, text, y):
    c.setFont("Helvetica-Bold", 16)
    c.drawString(2*cm, y, text)

def draw_para(c, text, y, size=10, leading=12):
    c.setFont("Helvetica", size)
    for line in text.split("\n"):
        c.drawString(2*cm, y, line); y -= leading
    return y

def make_report(output_path: Path, title: str, kpis: dict, notes: str, tables: dict):
    c = canvas.Canvas(str(output_path), pagesize=A4)
    W, H = A4
    y = H - 2*cm
    draw_title(c, title, y); y -= 1.2*cm

    # KPIs
    c.setFont("Helvetica-Bold", 12); c.drawString(2*cm, y, "Executive Summary"); y -= 0.8*cm
    c.setFont("Helvetica", 10)
    for k,v in kpis.items():
        c.drawString(2*cm, y, f"â€¢ {k}: {v}"); y -= 0.5*cm
    y -= 0.3*cm

    # Narrative
    c.setFont("Helvetica-Bold", 12); c.drawString(2*cm, y, "Narrative Findings"); y -= 0.8*cm
    y = draw_para(c, notes, y)

    # Tables (limited rows for PDF)
    for name, df in tables.items():
        y -= 0.4*cm
        c.setFont("Helvetica-Bold", 12); c.drawString(2*cm, y, name); y -= 0.6*cm
        c.setFont("Helvetica", 8)
        max_rows = 15
        view = df.head(max_rows).fillna("")
        col_width = (W - 4*cm) / max(1, len(view.columns))
        # header
        c.setFillColor(colors.lightgrey); c.rect(2*cm, y-0.4*cm, col_width*len(view.columns), 0.5*cm, fill=1, stroke=0)
        c.setFillColor(colors.black)
        for i, col in enumerate(view.columns):
            c.drawString(2*cm + i*col_width + 2, y-0.2*cm, str(col)[:20])
        y -= 0.6*cm
        # rows
        for _, row in view.iterrows():
            for i, col in enumerate(view.columns):
                c.drawString(2*cm + i*col_width + 2, y, str(row[col])[:20])
            y -= 0.45*cm
            if y < 3*cm:
                c.showPage(); y = H - 2*cm
        y -= 0.2*cm

    # Footer
    c.setFont("Helvetica-Oblique", 8)
    c.drawRightString(W-2*cm, 1.5*cm, "Generated by FBW & Economic Equality Tracker")
    c.showPage(); c.save()
    return output_path
